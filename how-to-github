[Git 설정관련]

$ git config –global user.name “사용자이름”

$ git config –global user.email “사용자이메일”

(vim으로 git 사용하기)
$ git config -global core.editor "vim"


1. Git은 원격 저장소와 로컬 저장소가 존재한다.

원격 저장소는 쉽게 말해 GitHub 웹 상에 등록된 리포지토리를 의미하고, 로컬 저장소는 사용자 PC에서 생성된, 또는 사용할 폴더(저장소)를 의미한다.

따라서 Git 업로드를 위해 먼저 로컬 저장소를 생성한다. 폴더를 새로 생성하여도 되고, 기존 프로젝트 폴더를 그대로 사용하여도 된다.

git zsh를 실행시키고, 사용할 프로젝트(폴더)로 이동 후 아래 명령어를 입력한다.

$ git init

init 명령어는 해당 폴더를 로컬 저장소로 사용하기 위하여 초기 설정을 수행하는 명령어로 실행하면 .git 이름의 숨겨진 폴더가 생성된다.

 

3. 로컬 저장소를 생성 및 설정한 후 본격적으로 파일을 업로드 하는데 업로드 전 status 명령어로 현재 상태를 확인할 수 있다.

$ git status

해당 명령어를 실행하면 untracked 파일들이 붉은 색으로 출력되고, 해당 파일들을 add 명령어를 통해 tracked 파일로 만들어 준다.

$ git add 원하는 파일 또는 폴더

참고로 모든 파일 및 폴더를 업로드 하기 위해서는 .(점)을 사용한다.


* add 한 후에 취소 하고 싶을 때

1) 전체 취소 git reset
2) 한개씩 취소 git reset 파일명
 

4. Commit 하기

add 후 git status 명령어를 통해 업로드 될 새로운 파일들을 확인한다. 이 후 문제가 없으면 해당 파일들을 아래의 명령어를 통해 커밋한다.

$ git commit -m “커밋 메세지”

 

5. Commit를 완료하였으면 이제 해당 파일들을 실제의 원격 저장소에 연결하여 업로드를 준비한다.

$ git remote add origin 저장소 주소.git

$ git remote -v

 

 

6. 최종적으로 원격 저장소로 업로드를 하기 위해서는 push 명령어를 사용한다.

$ git push origin master

그런데 여기서 오류가 나는 경우가 종종 있는데 그 원인은 SSH 키 값의 문제거나 원격 저장소의 ID, Password 문제가 있을 수 있다.

그러나 가장 많은 문제는 기존 원격 저장소의 파일과 현재 로컬 저장소의 파일 버전이 일치하지 않는 경우가 대부분인데 git clone 명령어를 사용하여 근본적인 에러를 해결할 수 있지만 강제 업로드를 원하는 경우 + 명령어를 사용하여 임시로 해결할 수 있다.

$ git push origin +master
